apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'androidx.navigation.safeargs.kotlin'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.1"

    buildFeatures {
        dataBinding = true
    }

    defaultConfig {
        applicationId "com.himdeve.tmdb.interview"
        minSdkVersion 22
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // Load TMDB properties
        def tmdbPropertiesFile = rootProject.file("tmdb.properties")
        def tmdbProperties = new Properties()
        tmdbProperties.load(new FileInputStream(tmdbPropertiesFile))

        // An API Key will be required for a successful build
        buildConfigField("String", "API_KEY", System.getenv("API_KEY") ?: "\"${tmdbProperties['tmdb_api_key']}\"")
    }

    signingConfigs {
        release {
            // Load keystore
            def keystorePropertiesFile = rootProject.file("keystore.properties")
            def keystoreProperties = new Properties()
            keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

            storeFile file(System.getenv("KEYSTORE") ?: keystoreProperties["signing_keystore_filepath"])
            storePassword System.getenv("STORE_PASSWORD") ?: keystoreProperties["signing_keystore_password"]
            keyAlias System.getenv("KEY_ALIAS") ?: keystoreProperties["signing_key_alias"]
            keyPassword System.getenv("KEY_PASSWORD") ?: keystoreProperties["signing_key_password"]
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.0'

    // to use StateRestorationPolicy for remembering scrolling position
    def recycler_view = "1.2.0-alpha05"
    implementation "androidx.recyclerview:recyclerview:$recycler_view"

    def hilt_version = "2.29-alpha"
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    def hilt_viewmodels = "1.0.0-alpha02"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hilt_viewmodels"
    kapt "androidx.hilt:hilt-compiler:$hilt_viewmodels"

    def kotlin_ktx = "1.3.0"
    implementation "androidx.core:core-ktx:$kotlin_ktx"

    def fragment_ktx = "1.2.5"
    implementation "androidx.fragment:fragment-ktx:$fragment_ktx"

    def livedata_ktx = "2.2.0"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$livedata_ktx"

    def retrofit = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit"

    def room = "2.2.5"
    implementation "androidx.room:room-runtime:$room"
    implementation "androidx.room:room-ktx:$room"
    kapt "androidx.room:room-compiler:$room"

    // Timber
    def timber = "4.7.1"
    implementation "com.jakewharton.timber:timber:$timber"

    // Moshi
    def moshi = "1.9.3"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi"

    // Glide
    def glide = "4.11.0"
    implementation "com.github.bumptech.glide:glide:$glide"
    kapt "com.github.bumptech.glide:compiler:$glide"

    // for CircularProgressDrawable in Glide
    def swipeRefreshLayout = "1.1.0"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$swipeRefreshLayout"
}

kapt {
    correctErrorTypes true
}